name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      # - name: Test
      #   id: npm-ci-test
      #   run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write # require to delete cache

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          path: ~/.cache/
          skip-save: ${{ github.ref != 'refs/heads/main' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run:
          mkdir -p ~/.cache/depcache && echo hello > ~/.cache/depcache/hello.txt

  multi-line-path:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write # require to delete cache
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          path: |
            ~/.cache/
            ~/.cache2/
          skip-save: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ${{ steps.test-action.outputs.cache-hit }}
      - name: check cache
        if: ${{ steps.test-action.outputs.cache-hit }} == 'true'
        # check content
        run: |
          if [[ $(cat ~/.cache/depcache/hello.txt) != "hello" ]]; then
            echo "hello.txt is not hello"
            exit 1
          fi
          if [[ $(cat ~/.cache2/depcache/bye.txt) != "bye" ]]; then
            echo "bye.txt is not bye"
            exit 1
          fi
      - run:
          mkdir -p ~/.cache/depcache && echo hello > ~/.cache/depcache/hello.txt
          mkdir -p ~/.cache2/depcache && echo bye > ~/.cache2/depcache/bye.txt
